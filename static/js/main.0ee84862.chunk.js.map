{"version":3,"sources":["reducers/todoWithUsers.js","reducers/rootReducer.js","store/store.js","actions/todosWithUsers.js","components/User.js","containers/TodoItem.js","components/TodoList.js","containers/App.js","index.js"],"names":["initialState","todosWithUsers","isLoadingStart","isDataLoaded","rootReducer","combineReducers","state","arguments","length","undefined","action","type","_objectSpread","filter","todo","id","payload","store","createStore","composeWithDevTools","applyMiddleware","thunk","TODOS_URL","USERS_URL","todosWithUsersFetchData","dispatch","Promise","all","fetch","then","_ref","_ref2","Object","slicedToArray","todosResponse","usersResponse","ok","Error","statusText","json","_ref3","_ref4","todosData","usersData","preparedTodos","map","todosWithUsers_objectSpread","user","find","userId","User","name","phone","email","react_default","a","createElement","Fragment","className","connect","delTodo","deleteTodo","title","completed","checked","readOnly","components_User","onClick","TodoList","containers_TodoItem","key","App","_this$props","this","props","fetchData","components_TodoList","disabled","Component","ReactDOM","render","es","src_containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.0ee84862.chunk.js","sourcesContent":["const initialState = {\n  todosWithUsers: [],\n  isLoadingStart: false,\n  isDataLoaded: false,\n};\n\nexport default function todosWithUsers(state = initialState, action) {\n  switch (action.type) {\n    case 'TODOS_WITH_USERS_FETCH_DATA_SUCCESS':\n      return {\n        isLoadingStart: false,\n        isDataLoaded: true,\n        todosWithUsers: action.todosWithUsers,\n      };\n\n    case 'IS_LOADING_START':\n      return {\n        ...state,\n        isLoadingStart: true,\n      };\n\n    case 'DELETE_TODO':\n      return {\n        ...state,\n        todosWithUsers: state.todosWithUsers.filter(todo => (\n          todo.id !== action.payload)),\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport todosWithUsers from './todoWithUsers';\n\nconst rootReducer = combineReducers({\n  todosWithUsers,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers/rootReducer';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","const TODOS_URL = 'https://jsonplaceholder.typicode.com/todos';\nconst USERS_URL = 'https://jsonplaceholder.typicode.com/users';\n\n// action creators\nexport function todosWithUsersFetchDataSucces(todosWithUsers) {\n  return {\n    type: 'TODOS_WITH_USERS_FETCH_DATA_SUCCESS',\n    todosWithUsers,\n  };\n}\n\nexport function isLoadingStart() {\n  return {\n    type: 'IS_LOADING_START',\n  };\n}\n\nexport function deleteTodo(id) {\n  return {\n    type: 'DELETE_TODO',\n    payload: id,\n  };\n}\n\n// async function fetch data\nexport function todosWithUsersFetchData() {\n  return (dispatch) => {\n    dispatch(isLoadingStart());\n\n    Promise.all([\n      fetch(TODOS_URL),\n      fetch(USERS_URL),\n    ])\n      .then(([todosResponse, usersResponse]) => {\n        if (!todosResponse.ok) {\n          throw new Error(todosResponse.statusText);\n        }\n        if (!usersResponse.ok) {\n          throw new Error(usersResponse.statusText);\n        }\n\n        return Promise.all([todosResponse.json(), usersResponse.json()]);\n      })\n      .then(([todosData, usersData]) => {\n        const preparedTodos = todosData.map(todo => ({\n          ...todo,\n          user: usersData.find(user => user.id === todo.userId),\n        }));\n        dispatch(todosWithUsersFetchDataSucces(preparedTodos));\n      });\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => {\n  const { name, phone, email } = user;\n\n  return (\n    <>\n      <p className=\"todo-list__item-name\">{name}</p>\n      <p>{phone}</p>\n      <p>{email}</p>\n    </>\n  );\n};\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport User from '../components/User';\nimport { deleteTodo } from '../actions/todosWithUsers';\n\nconst TodoItem = ({ todo, delTodo }) => {\n  const {\n    title, completed, user, id,\n  } = todo;\n\n  return (\n    <div className=\"todo-list__item\">\n      <h2>{id}</h2>\n      <h4>{title}</h4>\n      <input type=\"checkbox\" checked={completed} readOnly />\n      <User user={user} />\n      <button\n        className=\"button button--delete\"\n        type=\"button\"\n        onClick={() => delTodo(id)}\n      >\n        delete\n      </button>\n    </div>\n  );\n};\n\nconst shape = PropTypes.shape({\n  title: PropTypes.string,\n  completed: PropTypes.bool,\n  id: PropTypes.number,\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    phone: PropTypes.string,\n    email: PropTypes.string,\n  }),\n});\n\nTodoItem.propTypes = {\n  todo: shape.isRequired,\n  delTodo: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({\n  delTodo: id => dispatch(deleteTodo(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem);\n","import React from 'react';\nimport TodoItem from '../containers/TodoItem';\n\nconst TodoList = ({ preparedTodos }) => (\n  preparedTodos.map(todo => <TodoItem todo={todo} key={todo.id} />));\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { todosWithUsersFetchData } from '../actions/todosWithUsers';\nimport TodoList from '../components/TodoList';\n\nclass App extends Component {\n  static propTypes = {\n    fetchData: PropTypes.func.isRequired,\n    isDataLoaded: PropTypes.bool.isRequired,\n    isLoadingStart: PropTypes.bool.isRequired,\n    todosWithUsers: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      userId: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    })).isRequired,\n  }\n\n  componentDidUpdate() { }\n\n  render() {\n    const {\n      isDataLoaded, isLoadingStart, fetchData, todosWithUsers,\n    } = this.props;\n\n    if (!isDataLoaded) {\n      return isLoadingStart\n        ? (\n          <div className=\"app\">\n            <h1>Todos</h1>\n            <button\n              type=\"button\"\n              className=\"button\"\n              disabled\n            >\n              ...Loading\n            </button>\n          </div>\n        )\n        : (\n          <div className=\"app\">\n            <h1>Todos</h1>\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={fetchData}\n            >\n              Load\n            </button>\n          </div>\n        );\n    }\n\n    return (\n      <div className=\"app\">\n        <h1>Todos</h1>\n        <TodoList preparedTodos={todosWithUsers} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  todosWithUsers: state.todosWithUsers.todosWithUsers,\n  isDataLoaded: state.todosWithUsers.isDataLoaded,\n  isLoadingStart: state.todosWithUsers.isLoadingStart,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchData: () => dispatch(todosWithUsersFetchData()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport App from './containers/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}